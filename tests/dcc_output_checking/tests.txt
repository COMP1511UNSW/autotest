files=autotest.py
arguments=-a autotest
# stop minor updates to autotest output breaking test
ignore_blank_lines=1
ignore_case=1
compare_only_characters=abcdefghijklmnopqrstuvwxyz

# remove hex constants
postprocess_output_command="sed 's/0x[a-zA-Z0-9]*//'"

main expected_stdout='dcc -o hello hello.c\nTest implicit_output_checking_pass (hello hello world) - passed\nTest implicit_output_checking_fail (hello good-bye world) - failed (incorrect output)\nYour program produced these 1 lines of output before it was terminated:\ngood-bye\n\nExecution stopped because of an incorrect output line.\nByte 1 of line 1 of program output was incorrect.\nThe correct output line was:\nhello\nYour program printed this line:\ngood-bye\n\nExecution stopped in main(argc=3, argv=0x7ffed2cb6a98) in hello.c at line 5:\n\nint main(int argc, char *argv[]) {\n\tfor (int i = 1;  i < argc; i++) {\n-->\t\tprintf("%s\\n", argv[i]);\n\t}\n}\n\nValues when execution stopped:\n\nargc = 3\ni = 1\nargv[i] = "good-bye"\n\nYou can reproduce this test by executing these commands:\n  dcc -o hello hello.c\n  hello good-bye world\nTest explicit_no_output_checking_pass (hello hello World) - passed\nTest explicit_no_output_checking_fail (hello good-bye World) - failed (Incorrect output)\nYour program produced these 2 lines of output:\ngood-bye\nWorld\n\nThe correct 2 lines of output for this test were:\nhello\nworld\n\nThe difference between your output(-) and the correct output(+) is:\n- good-bye\n+ hello\n  World\nYou can reproduce this test by executing these commands:\n  dcc -o hello hello.c\n  hello good-bye World\nTest explicit_output_checking_pass (hello Hello world) - passed\nTest explicit_output_checking_fail (hello Good-bye world) - failed (incorrect output)\nYour program produced these 1 lines of output before it was terminated:\nGood-bye\n\nExecution stopped because of an incorrect output line.\nByte 1 of line 1 of program output was incorrect.\nThe correct output line was:\nhello\nYour program printed this line:\nGood-bye\n\nExecution stopped in main(argc=3, argv=0x7ffcc5a00428) in hello.c at line 5:\n\nint main(int argc, char *argv[]) {\n\tfor (int i = 1;  i < argc; i++) {\n-->\t\tprintf("%s\\n", argv[i]);\n\t}\n}\n\nValues when execution stopped:\n\nargc = 3\ni = 1\nargv[i] = "Good-bye"\n\nYou can reproduce this test by executing these commands:\n  dcc -o hello hello.c\n  hello Good-bye world\n3 tests passed 3 tests failed\n'
